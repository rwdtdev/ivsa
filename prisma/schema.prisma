generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output   = "../docs/models"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organisation {
  /// Идентификатор отдела в формате cUID
  id          String       @id @default(cuid())
  /// Название организации
  name        String       @unique
  /// Описание организации
  description String
  /// Список отделов модели {Department}, входящих в организацию
  Department  Department[]
  /// Список пользователей модели {User}, входящих в организацию
  User        User[]
  /// Дата и время создания записи
  createdAt   DateTime     @default(now())
  /// Дата и время модификации записи
  updatedAt   DateTime     @updatedAt

  @@map("organisations")
}

model Department {
  /// Идентификатор отдела в формате cUID
  id             String        @id @default(cuid())
  /// Название отдела
  name           String        @unique
  /// Описание отдела
  description    String?
  /// Ссылка на организацию, в которую входит отдел в формате cUID
  organisationId String?
  /// Объект с данными об организации, в которую входит отдел
  organisation   Organisation? @relation(fields: [organisationId], references: [id])
  /// Дата и время создания записи
  createdAt      DateTime      @default(now())
  /// Дата и время модификации записи
  updatedAt      DateTime      @updatedAt
  /// Список пользователей, входящих в отдел
  users          User[]

  @@map("departments")
}

model User {
  /// Идентификатор пользователя в формате cUID
  id                      String        @id @default(cuid())
  /// ФИО
  name                    String
  /// Логин для входа в систему
  username                String        @unique
  /// Адрес электронной почты
  email                   String        @unique
  /// Номер телефона
  phone                   String
  /// Хэш пароля
  password                String
  /// Список последних 5ти захешированных паролей пользователя, разделенных ","
  passwordHashes          String[]
  /// Роль
  role                    UserRole
  /// Статус
  status                  UserStatus
  /// Дата и время создания записи
  createdAt               DateTime      @default(now())
  /// Дата и время модификации записи
  updatedAt               DateTime      @updatedAt
  /// Дата и время окончания действия аккаунта
  expiresAt               DateTime
  /// Табельный номер
  tabelNumber             String        @unique
  /// Внешний идентификатор в системе IVA R
  ivaProfileId            String?       @unique
  /// Ссылка на организацию, в которой состоит пользователь
  organisationId          String?
  /// Токен для обновления accessToken-а в сессии пользователя
  refreshToken            String?
  /// Номер заявки в системе АС ОЗ
  ASOZSystemRequestNumber String?
  /// Дата и время последней смены пароля
  lastUpdatePasswordDate  DateTime      @default(now())
  /// Объект с данными об организации, в которой состоит пользователь
  organisation            Organisation? @relation(fields: [organisationId], references: [id])
  /// Ссылка на отдел, в котором состоит пользователь
  departmentId            String?
  /// Объект с данными об отделе, в котором состоит пользователь
  department              Department?   @relation(fields: [departmentId], references: [id])
  /// Список описей и событий инвентаризаций, в которых пользователь является участником
  participants            Participant[]

  @@map("users")
}

model Event {
  /// Идентификатор события в формате cUID
  id                     String         @id @default(cuid())
  /// Идентификатор распоряжения
  commandId              String
  /// Номер распоряжения
  commandNumber          String
  /// Дата распоряжения
  commandDate            DateTime
  /// Идентификатор приказа формы № ИНВ-22
  orderId                String
  /// Номер приказа формы № ИНВ-22
  orderNumber            String
  /// Дата составления приказа формы № ИНВ-22
  orderDate              DateTime
  /// Дата начала события
  startAt                DateTime
  /// Дата окончания события
  endAt                  DateTime
  /// Балансовая единица
  balanceUnit            String
  /// Код региона, в котором находится балансовая единица
  balanceUnitRegionCode  String
  /// Список участников события
  participants           Participant[]
  /// Список описей
  inventories            Inventory[]
  /// Глобальный статус события инвентаризации
  status                 EventStatus    @default(OPEN)
  /// Статус инструктужа, которые выставляется на основе
  briefingStatus         BriefingStatus @default(NOT_STARTED)
  /// Ссылка для подключения к открытой комнате видеоинструктажа
  briefingRoomInviteLink String?
  /// Идентификатор конференции в IVA-R
  briefingSessionId      String?
  /// Дата и время создания записи
  createdAt              DateTime       @default(now())
  /// Дата и время модификации записи
  updatedAt              DateTime       @updatedAt

  @@map("events")
}

model Participant {
  id          String     @id @default(cuid())
  /// Идентификатор события
  eventId     String
  /// Объект с данными о событии, с которым связана опись
  event       Event      @relation(fields: [eventId], references: [id])
  /// Идентификатор описи
  inventoryId String?
  /// Объект с данными об описи
  inventory   Inventory? @relation(fields: [inventoryId], references: [id])
  /// Идентификатор пользователя в виде табельного номера
  tabelNumber String
  /// Имя участника имя пользователя
  name        String?
  /// Объект с данными о пользователе
  user        User?      @relation(fields: [userId], references: [id])
  /// Идентификатор пользователя
  userId      String?
  /// Роль участника
  role        UserRole

  @@unique([eventId, inventoryId, tabelNumber])
  @@map("participants")
}

model Inventory {
  /// Внешний Идентификаторр описи из Soi
  id                  String              @id
  /// Идентификатор события к которому привязана опись
  eventId             String
  /// Объект с данными о событии, с которым связана опись
  event               Event               @relation(fields: [eventId], references: [id])
  /// Номер описи
  number              String
  /// Код описи
  code                String
  /// Краткое наименование описи
  shortName           String
  /// Полное наименование описи
  name                String
  /// Дата описи
  date                DateTime?
  /// Идентификатор конференции в IVA-R
  auditSessionId      String?
  /// Ссылка для подключения к открытой комнате видеоинвентаризации
  auditRoomInviteLink String?
  /// Дата и время создания записи
  createdAt           DateTime            @default(now())
  /// Дата и время модификации записи
  updatedAt           DateTime            @updatedAt
  /// Список участников
  participants        Participant[]
  /// Cтатус описи
  status              InventoryStatus     @default(AVAILABLE)
  /// Идентификатор комплексной описи, если текущая опись является индивидуальной, в ином случае всегда = null
  parentId            String?
  /// Список объектов описи
  objects             InventoryObject[]
  /// Список данных о геолокации в месте проведения описи
  locations           InventoryLocation[]
  /// Список ресурсов инвентаризационной описи
  resources           InventoryResource[]
  /// Признак того, что инвентаризация по описи окончена, все ресурсы были обработаны, сохранены и т.д.
  isProcessed         Boolean             @default(false)
  address             String?

  @@map("inventories")
}

model InventoryLocation {
  /// Идентификатор координаты
  id          String             @id @default(uuid())
  /// Широта
  latitude    Float
  /// Долгота
  longitude   Float
  /// Временная метка
  dateTime    DateTime           @db.Timestamptz(3)
  /// Точность
  accuracy    Float
  /// Идентификатор описи, 
  inventoryId String
  /// Объект с данными об описи
  inventory   Inventory          @relation(fields: [inventoryId], references: [id])
  /// Идентификатор ресурса к которому относятся метаданные
  resourceId  String?
  resource    InventoryResource? @relation(fields: [resourceId], references: [id])
  /// Дата и время создания записи
  createdAt   DateTime           @default(now())

  @@map("inventory_locations")
}

model InventoryObject {
  id                 String    @id @default(cuid())
  inventoryId        String
  inventory          Inventory @relation(fields: [inventoryId], references: [id])
  inventoryNumber    String?
  location           String?
  serialNumber       String?
  networkNumber      String?
  passportNumber     String?
  quantity           Int?
  state              String?
  name               String?
  unitCode           String?
  unitName           String?
  batchNumber        String?
  placement          String?
  nomenclatureNumber String?
  /// Дата и время создания записи
  createdAt          DateTime  @default(now())
  /// Дата и время модификации записи
  updatedAt          DateTime  @updatedAt

  @@map("inventory_objects")
}

model InventoryResource {
  /// Уникальный идентификатор ресурса
  id            String                @id @default(uuid())
  /// Идентификатоор файла в IVA R
  ivaId         String
  /// Название файла
  name          String
  /// Дата-время начала видео. Применимо только для ресурсов типа VIDEO
  startAt       DateTime?             @db.Timestamptz()
  /// Дата-время конца видео. Применимо только для ресурсов типа VIDEO
  endAt         DateTime?             @db.Timestamptz()
  /// Связь с инвентаризационной описью, которой пренадлежит ресурс
  inventoryId   String
  /// Ссылка в ASVI для получения этого ресурса через API (Опционально для разных типов ресусра)
  url           String?
  /// Ссылка на видео файл s3-хранилище. (Ссылка изменяется по мере переноса файла из ОП в АХ)
  s3Url         String?
  /// Ссылка на файл метаданных в s3-хранилище. (Ссылка изменяется по мере переноса файла из ОП в АХ)
  s3MetadataUrl String?
  /// Путь временного хранения сгенерированного файла метаданных
  metadataPath  String?
  /// Хэш-сумма видеофайла
  videoHash     String?
  /// Хэш-сумма файла метаданных к видео
  metadataHash  String?
  /// Статус процесса обработки ресурса в iva-file-transporter
  status        ResourceProcessStatus @default(NOT_PROCESSED)
  /// Длительность видео-ресурса
  duration      Float?
  /// Список геолокационных данных, которые связаны с этим ресурсом
  locations     InventoryLocation[]
  inventory     Inventory             @relation(fields: [inventoryId], references: [id])

  @@unique([name, inventoryId, ivaId])
  @@map("inventory_resources")
}

model Action {
  /// Идентификатор действия
  id        String       @id @default(uuid())
  requestId String?
  actionAt  DateTime     @default(now())
  type      ActionType
  status    ActionStatus
  initiator String
  ip        String?
  details   Json?

  @@map("actions")
}

enum ActionType {
  /// Пользовательские события
  /// Создание пользователя в системе
  USER_CREATE
  /// Редактирование данных о пользователе. Не включает изменение роли
  USER_EDIT
  /// Изменение системной роли пользователя
  USER_CHANGE_ROLE
  /// Успешная авторизация на портале
  USER_LOGIN
  /// Выход пользователя из учетной записи
  USER_LOGOUT
  /// Скачивание файлов инвентаризации пользователем (метаданных или видео-ресурсов)
  USER_DOWNLOAD_FILE
  /// Пользователь зашел в конференцию для инструктажа (Кликнул на иконку входа в конференцию на портале)
  USER_LOGGED_INTO_BRIEFING_CONFERENCE
  /// Пользователь перешел на страницу входа в конференцию IVA R по описи (кликнул на кнопку входа в конференцию в карточке описи)
  USER_LOGGED_INTO_AUDIT_CONFERENCE
  /// Пользователь инициировал процесс восстановления пароля (по клику на кнопку с отправкой нового пароля на e-mail)
  USER_REQUEST_PASSWORD_RESET
  /// Пользователь был заблокирован из-за превышения попыток ввода пароля, входа в систему
  USER_BLOCK_BY_LIMIT_LOGIN_ATTEMPTS
  /// Администратор сбросил пользователю пароль
  ADMIN_USER_PASSWORD_RESET
  /// Блокировка пользователя администратором
  ADMIN_USER_BLOCK

  /// Системные события
  /// Начало переноса обработанных видео-ресурсов и метаданных в Оперативное хранилище
  SYSTEM_MOVE_RESOURCES_TO_OPERATIVE_STORAGE_START
  /// Окончание переноса обработанных видео-ресурсов и метаданных в Оперативное хранилище
  SYSTEM_MOVE_RESOURCES_TO_OPERATIVE_STORAGE_END
  /// Начало процесса переноса ресурсов из Оперативного хранилища в Архивное
  SYSTEM_MOVE_RESOURCES_FROM_OPERATIVE_TO_ARCHIVE_STORAGE_START
  /// Окончание процесса переноса ресурсов из Оперативного хранилища в Архивное
  SYSTEM_MOVE_RESOURCES_FROM_OPERATIVE_TO_ARCHIVE_STORAGE_END

  /// Внешние события по запросам СБО СОИ. ЭДО. ИНВ. ВИ
  /// Создание события инвентаризации
  SOI_EVENT_CREATE
  /// Создание инвентаризационной описи и конференции IVA R
  SOI_AUDIT_OPEN
  /// Закрытие инвентаризационной описи и конференции IVA R
  SOI_AUDIT_CLOSE
  /// Открытие конференции для инструктажа в IVA R 
  SOI_BRIEFING_OPEN
  /// Закрытие конференции для инструктажа в IVA R
  SOI_BRIEFING_CLOSE
  /// Изменение состава участников события инвентаризации по запросу СБО СОИ
  SOI_EVENT_PARTICIPANTS_CHANGE
  /// Проверка зарегистрированных в системе пользователей
  SOI_CHECK_USERS
}

enum ActionStatus {
  SUCCESS
  ERROR
}

enum SystemActionType {
  CREATE_EVENT
  CREATE_INVENTORY
}

enum UserStatus {
  /// Активен
  ACTIVE
  /// Заблокирован
  BLOCKED
  /// Освобожден от должности
  RECUSED
}

enum UserRole {
  /// Администратор
  ADMIN
  /// Пользователь
  USER
  /// Председатель
  CHAIRMAN
  /// Участник комиссии
  PARTICIPANT
  /// Материально-ответственное лицо
  FINANCIALLY_RESPONSIBLE_PERSON
  /// Бухгалтер
  ACCOUNTANT
  /// Проверяющий
  INSPECTOR
  /// Руководитель
  MANAGER
  /// Акцепт-бухгалтер
  ACCOUNTANT_ACCEPTOR
  /// Оператор-технолог
  ENGINEER
}

enum InventoryStatus {
  /// Опись доступна
  AVAILABLE
  /// Опись удалена
  REMOVED
  /// Комната по описи закрыта
  CLOSED
}

enum EventStatus {
  /// Событие открыто
  OPEN
  /// Событие закрыто
  CLOSED
  /// Событие удалено
  REMOVED
}

enum BriefingStatus {
  /// Инструктаж не начат
  NOT_STARTED
  /// Инструктаж в процессе
  IN_PROGRESS
  /// Инструктаж пройден
  PASSED
}

enum ResourceProcessStatus {
  /// Еще не началась обработка ресурса 
  NOT_PROCESSED
  /// Ресусрс в процессе обработки
  IN_PROCESS
  /// Ресурс успешно обработан
  PROCESSED
}

enum ConferenseRole {
  SPEAKER
  MODERATOR
  ATTENDEE
}
